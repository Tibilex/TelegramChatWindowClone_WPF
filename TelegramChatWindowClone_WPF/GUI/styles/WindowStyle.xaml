<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <SolidColorBrush x:Key="Color.Gray" Color="#f1f1f1"/>
    <SolidColorBrush x:Key="Color.DarkGray" Color="#b8b8b8"/>
    <SolidColorBrush x:Key="Color.Red" Color="#e81123"/>
    <SolidColorBrush x:Key="Color.Blue" Color="#419fd9"/>

    <Image x:Key="minimiseIcon" Source="/resources/ico/minimise.png" RenderOptions.BitmapScalingMode="Fant"/>
    <Image x:Key="restoreIcon" Source="/resources/ico/restore.png" RenderOptions.BitmapScalingMode="Fant"/>
    <Image x:Key="menuIcon" Source="/resources/ico/menu.png" RenderOptions.BitmapScalingMode="Fant"/>
    <Image x:Key="searchIcon" Source="/resources/ico/search.png" RenderOptions.BitmapScalingMode="Fant"/>
    <Image x:Key="hideIcon" Source="/resources/ico/hideInfo.png" RenderOptions.BitmapScalingMode="Fant"/>
    <Image x:Key="propIcon" Source="/resources/ico/prop.png" RenderOptions.BitmapScalingMode="Fant"/>
    <Image x:Key="chatBackground" Source="/resources/img/back.png" RenderOptions.BitmapScalingMode="Fant"/>

    <Style x:Key="headerStyle" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource Color.Gray}"/>
    </Style>
    <Style x:Key="borderStyle" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource Color.Gray}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>
    <Style x:Key="WindowButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Color.Gray}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="BorderBrush" Value="{StaticResource Color.DarkGray}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Color.DarkGray}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="closeButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Color.Gray}"/>
        <Setter Property="Foreground" Value="{StaticResource Color.DarkGray}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Color.Red}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="navButton" TargetType="Button">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="10"/>
    </Style>
    <Style x:Key="textBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource Color.Gray}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Color.Gray}"/>
        <Setter Property="Foreground" Value="{StaticResource Color.DarkGray}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Margin" Value="0 10 10 10"/>
        <Setter Property="Text" Value="Поиск"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="15 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Color.Blue}"/>-->
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Color.Blue}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="2"/>
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{StaticResource Color.Blue}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="groupPrewButton" TargetType="Button">
        <Setter Property="BorderBrush" Value="white"/>
        <Setter Property="Background" Value="white"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{StaticResource Color.Blue}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Color.Blue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="chanelButtonStyle" TargetType="Button">
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="{StaticResource Color.Blue}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Color.Blue}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="textNameChanelStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="10 15 0 0"/>
    </Style>
    <Style x:Key="txtMsgChanelStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Color.DarkGray}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Margin" Value="10 40 0 0"/>
    </Style>
    <Style x:Key="txtMsgTimeChanelStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Color.DarkGray}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Margin" Value="10 15 0 0"/>
    </Style>
    <Style x:Key="roundedCounterStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource Color.DarkGray}"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Gray}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Color.DarkGray}"/>
        <Setter Property="FontFamily" Value="14"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="Margin" Value="5 25 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="notifyTextBlockStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource Color.Blue}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="18"/>
    </Style>
    <Style x:Key="roundedBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Margin" Value="15"/>
    </Style>
</ResourceDictionary>